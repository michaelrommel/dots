# C-b is not acceptable -- Vim uses it
set-option -g prefix C-a
# allows us to use C-a a <command> to send commands to 
# a TMUX session inside another TMUX session
bind-key a send-prefix
# remove default tmux key binding
unbind C-b

# usual cycling between windows
bind-key C-a   last-window
bind-key Space next-window

# better vim like selections
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel

# key binding for pane management
bind-key f1    select-layout even-horizontal
bind-key f2    select-layout even-vertical
bind-key f3    select-layout main-horizontal
bind-key f4    select-layout main-vertical
bind-key f5    select-layout tiled
bind-key f7    select-layout "a0dc,144x39,0,0[144x33,0,0{71x33,0,0,0,72x33,72,0,2},144x5,0,34,1]"
bind-key h     select-pane -L
bind-key j     select-pane -D
bind-key k     select-pane -U
bind-key l     select-pane -R
bind-key C-h   select-pane -L
bind-key C-j   select-pane -D
bind-key C-k   select-pane -U
bind-key C-l   select-pane -R
bind-key -r H  resize-pane -L
bind-key -r J  resize-pane -D
bind-key -r K  resize-pane -U
bind-key -r L  resize-pane -R


bind-key C-p   pipe-pane -o "cat >>#{pane_current_path}/pane-output.#I-#P"
bind-key C-o   pipe-pane

# split using the current working directory
# bind-key '"'   split-window -h -c '#{pane_current_path}'
# bind-key %     split-window -c '#{pane_current_path}'
# bind-key c     new-window -c '#{pane_current_path}'

# split using the OSC7 path, this has the format:
# file://md2v3xkc//home/rommel/software/rust
# note that the colon cannot be matched directly
bind-key '"'   split-window -h -c '#{s|file.//.*//|/|:pane_path}'
bind-key %     split-window -c '#{s|file.//.*//|/|:pane_path}'
bind-key c     new-window -c '#{s|file.//.*//|/|:pane_path}'

# pasting from the system clipboard
bind-key C-]  run "tmux_paste.sh" 

# this enables OSC52 processing
set -s set-clipboard on

# mouse support
set -g mouse on

set -g history-limit 9001

# neovim recommends this
set-option -g focus-events on

# start numbering at 1 for windows and panes
set -g base-index 1
set -g pane-base-index 1

# set status bar
set -g status-interval 10

# allows for faster key repetition
set -sg escape-time 0

# set the terminal capabilities correctly - I use mostly high colour capable terms
# depending on the os and installation the setting differs, from screen to
# screen-256color etc. You will lose italics and other capabilities. Even on
# homebrew the folks decided to revert back to screen-256color instead of tmux-256color
# because people expect it to work without installing a proper terminfo entry, which I do
# so I need this. Do not use -b for background here...
if-shell '[ "$(uname -o)" = "Darwin" ]' {
  set -g default-terminal "tmux-256color"
}

# if the terminfo entry does not support underline styles
#set -sa terminal-overrides ',*:Smulx=\E[4::%p1%dm'

# the following enables coloured undercurls, note the 4: as escaped colons
set -sa terminal-overrides ',*:Setulc=\E[58::2::::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'

# the terminfo entry for xterm-256colour contains no RGB or TC flags
#set -sa terminal-overrides ",xterm-256color*:Tc"
#set -sa terminal-overrides ",tmux-256color*:Tc"

# I am using terminal features here
set -sa terminal-features ',xterm-256color:RGB'

# activate the features for special ANSI sequences, only needed if the 
# original TERM variable is set to a terminfo entry that does not advertise
# these capabilities, like xterm-256color, but you are running in a "better" one
# Always remember to use -a to add to existing features or overrides
#set -sa terminal-features ",*:overline,*:strikethrough,*:usstyle"
set -sa terminal-features ",*:osc7,*:overline,*:usstyle"

# this activates the reporting of modifier combinations like Ctrl-Shift-i
set -sa terminal-features ",*:extkeys"
set -s extended-keys always
set -s extended-keys-format "csi-u"

# set window background colors
#set -g window-style 'fg=colour247,bg=colour236'
set -g @tmux-gruvbox 'dark'

# set window titles to index number plus shell command
set -g set-titles on
set -g set-titles-string "#S: #I | #W"

if-shell -b '[ "$(echo "$TMUX_VERSION >= 3.4" | bc)" = 1 ]' {
  # allow special OSC control escapes to pass through
  # used to send macos desktop notifications from scripts
  # although a pane option, it can be set on a global window level
  set -g allow-passthrough on
  set -ga update-environment TERM
  set -ga update-environment TERM_PROGRAM
}

# automatically set window title
set -wg automatic-rename

# set vi mode
set-window-option -g mode-keys vi

# rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
set-window-option -g aggressive-resize on
set-window-option -g clock-mode-style 24

# monitoring
set-window-option -g monitor-activity on
set-window-option -g monitor-bell off
set-window-option -g monitor-silence 0

set -g activity-action other
set -g bell-action current
set -g silence-action none
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off

# set padding of network monitor status line plugin
set -g @tmux-network-bandwidth-padding 9
# keep a variable initialized to keep track of the first run of the plugin
set -g @tmux-network-bandwidth-value -

# List of plugins
set -g @plugin 'tmux-plugins/tpm'

set -g @plugin 'tmux-gruvbox'
set -g @plugin 'tmux-network-bandwidth'
set -g @plugin 'tmux-plugin-cpu'
# 
# # Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
# # set-environment -g -F PATH "${HOME}/software/tmux/bin:/opt/homebrew/bin:/usr/local/bin:/bin:/usr/bin"
set-environment -g -F TMUX_PLUGIN_MANAGER_PATH "${HOME}/.local/share/tmux/plugins/"
run "${HOME}/.local/share/tmux/plugins/tpm/tpm"
